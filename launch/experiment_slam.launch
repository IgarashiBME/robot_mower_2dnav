<launch>
  <arg name="database_path"           default="/media/nvidia/e7ad1514-8ef4-4729-847b-6e33c4bdf764/rtabmap.db"/>
  <arg name="compressed"              default="false"/>         <!-- If you want to subscribe to compressed image topics -->
  <arg name="wait_for_transform" default="0.2"/> <!-- for data delay-->
  <node pkg="tf" type="static_transform_publisher" name="base_to_camera1_tf"
      args="0.25 0 0.89 0.0 0.0 0.0 base_link camera1_link 100" />-->
  <node pkg="tf" type="static_transform_publisher" name="base_to_camera2_tf"
      args="-0.25 0.0 0.92 3.1415926535 0.0 0.0  base_link camera2_link 100" />
   <group ns="camera1">
    <node pkg="nodelet" type="nodelet" name="nodelet_manager1" args="manager" />
    <node pkg="nodelet" type="nodelet" name="rgbd_sync1" args="load rtabmap_ros/rgbd_sync nodelet_manager1">
      <remap from="rgb/image"       to="color/image_raw"/>
      <remap from="depth/image"     to="aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="color/camera_info"/>
      <param name="approx_sync"          value="true"/>
    </node>
   </group>
   <group ns="camera2">
    <node pkg="nodelet" type="nodelet" name="nodelet_manager1" args="manager" />
    <node pkg="nodelet" type="nodelet" name="rgbd_sync1" args="load rtabmap_ros/rgbd_sync nodelet_manager1">
      <remap from="rgb/image"       to="color/image_raw"/>
      <remap from="depth/image"     to="aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="color/camera_info"/>
      <param name="approx_sync"          value="true"/>
    </node>
   </group>
  <group ns="rtabmap">
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>

   <node pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <remap from="rgbd_image0"       to="/camera1/rgbd_image"/>
      <remap from="rgbd_image1"       to="/camera2/rgbd_image"/>
      <remap from="odom"            to="/vo"/>
      <param name="subscribe_rgbd"           type="bool"   value="true"/>
      <param name="approx_sync"          value="true"/>
      <param name="queue_size"          value="10"/>
      <param name="wait_for_transform_duration" type="double" value="0.2"/>
      <param name="frame_id"                 type="string" value="base_link"/>
      <param name="rgbd_cameras"             type="int"    value="2"/>
      <param name="Vis/FeatureType"       type="string" value="8"/>
      <param name="Vis/EstimationType"       type="string" value="0"/>
      <param name="Vis/CorGuessWinSize"       type="string" value="0"/> 
      <param name="Odom/ResetCountdown"    type="string" value="1"/>
      <param name="Reg/Force3DoF"    value="true" />
    </node>

    <!-- Visual SLAM (robot side) -->
    <!-- args: "delete_db_on_start" and "udebug"-->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen"  args="--delete_db_on_start">
      <remap from="odom"            to="/odometry/filtered"/>
      <param name="subscribe_depth"  type="bool"   value="false"/>
      <param name="subscribe_rgbd"   type="bool"   value="true"/>
      <param name="rgbd_cameras"     type="int"    value="2"/>
      <param name="frame_id"         type="string" value="base_link"/>
      <param name="Optimizer/Strategy" type="string" value="1"/>
      <param name="queue_size"          value="10"/>
      <param name="Kp/DetectorStrategy"    type="string" value="8"/> 
      <param name="Kp/WordsPerImage"    type="string" value="-1"/> 
      <param name="wait_for_transform" type="bool" value="true"/>
      <param name="wait_for_transform_duration" type="double" value="0.2"/>
      <param name="map_negative_scan_empty_ray_tracing" type="bool" value="false"/>
      <param name="Reg/Force3DoF"    value="true" />
      <param name="RGBD/ProximityMaxGraphDepth" type="double" value="0" />
      <param name="RGBD/ProximityPathFilteringRadius" type="double"   value="1" /> 
      <param name="Grid/MaxGroundHeight" type="double" value="9999" />
      <param name="Grid/MinGroundHeight" type="double" value="-9999" />
      <param name="Optimizer/Slam2D" value="true" />
      <param name="grid_cell_size" type="double" value="0.10" />
      <param name="database_path"        type="string" value="$(arg database_path)"/>
      <remap from="rgbd_image0"       to="/camera1/rgbd_image"/>
      <remap from="rgbd_image1"       to="/camera2/rgbd_image"/>
   </node>
   </group>

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
    <rosparam command="load" file="$(find robot_mower_2dnav)/cfg/ekf_template.yaml" />
  </node>

  <!-- Visualization RVIZ -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find rtabmap_ros)/launch/config/rgbd.rviz"/>
  <include file="$(find darknet_ros)/launch/test.launch" />
  <include file="$(find realsense2_camera)/launch/two.launch" />
  <node name="unify_two" pkg="robot_mower_2dnav" type="unify_two_image.py" respawn="false" output="screen"/>
</launch>
